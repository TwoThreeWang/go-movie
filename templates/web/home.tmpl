{{ template "base.tmpl" . }}

{{ define "content" }}
<div class="main-body" id="app">
    <div class="index-header">
        <form action="/search">
            <input type="text" placeholder="搜索你想看的，看电影本该简单..." name="kw">
        </form>
        <div class="search-history">
            <a :href="`/search?kw=${item}`" v-for="item in history_search">[[item]]</a>
        </div>
    </div>
    <div class="index-hot">
        <p class="title">观看历史 <small>最近十部</small></p>
        <hr class="hr-edge-weak">
        <div class="index-history" id="index-history"><center><br>暂无观看历史哇，搜索看看自己喜欢的视频吧！<br><br></center></div>
        <p class="title">热门电影</p>
        <hr class="hr-edge-weak">
        <div class="conn-load" v-if="douban_movies_load">正在查询豆瓣热搜电影数据...</div>
        <div class="index-hot-item">
            <div class="movie" v-for="item in douban_movies">
                <img class="lazyload poster" :data-src="`${item.cover}`" :alt="`${item.title} Movie Poster`" referrerPolicy="no-referrer" src='../public/static/img/img_err.png' :onerror="`this.onerror=null;this.src='/doubanimg?link=${item.cover}';`">
                <div class="movie-details">
                    <a class="movie-title" :href="`/search?kw=${item.title}`" :title="`搜索《${item.title}》相关资源`">[[item.title]]</a>
                    <div class="cast-list">
                        <span><div class="douban-icon">豆</div> [[item.rate]]</span>
                        <br>
                        <br>
                        <span><a :href="`${item.url}`" class="douban-link" target="_blank">去豆瓣 >>></a></span>
                    </div>
                </div>
            </div>
        </div>
        <br><br><br>
        <p class="title">热门电视剧</p>
        <hr class="hr-edge-weak">
        <div class="conn-load" v-if="douban_tv_load">正在查询豆瓣热搜电视剧数据...</div>
        <div class="index-hot-item">
            <div class="movie" v-for="item in douban_tv">
                <img class="lazyload poster" :data-src="`${item.cover}`" :alt="`${item.title} Movie Poster`" referrerPolicy="no-referrer" src='../public/static/img/img_err.png' :onerror="`this.onerror=null;this.src='/doubanimg?link=${item.cover}';`">
                <div class="movie-details">
                    <a class="movie-title" :href="`/search?kw=${item.title}`" :title="`搜索《${item.title}》相关资源`">[[item.title]]</a>
                    <div class="cast-list">
                        <span><div class="douban-icon">豆</div> [[item.rate]]</span>
                        <br>
                        <br>
                        <span><a :href="`${item.url}`" class="douban-link" target="_blank">去豆瓣 >>></a></span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    const { createApp } = Vue
    createApp({
        delimiters: ['[[', ']]'], // 将标记符号修改为 [[ 和 ]]
        data() {
            return {
                history_search : [],
                douban_movies : [],
                douban_tv:[],
                douban_movies_load:true,
                douban_tv_load:true,
            }
        },
        methods: {
            watch_history(){
                var items = myQueue.getItems();
                if(items.length>0){
                    var index_watch_history = "";
                    for(var i = 0; i < items.length; i++){
                        var item = items[i].split('#')
                        index_watch_history+='<a href="/play?source='+item[0]+'&vid='+item[1]+'&play='+item[3]+'">'+item[2]+'</a>';
                    }
                    document.getElementById("index-history").innerHTML=index_watch_history;
                }
            }
        },
        mounted() {
            // 组件完成初始渲染并创建 DOM 节点后运行
            this.watch_history();
            // 获取搜索历史
            axios.get(api_url+'/searchhistory')
                .then(response => {
                    this.history_search = response.data['data'];
                })
                .catch(error => {
                    console.log(error);
                });
            // 豆瓣电影热搜
            axios.get(api_url+'/douban?type=movie')
                .then(response => {
                    this.douban_movies = response.data['data'];
                    this.douban_movies_load = false;
                })
                .catch(error => {
                    console.log(error);
                });
            // 豆瓣电视剧热搜
            axios.get(api_url+'/douban?type=tv')
                .then(response => {
                    this.douban_tv = response.data['data'];
                    this.douban_tv_load = false;
                })
                .catch(error => {
                    console.log(error);
                });
        }
    }).mount('#app')
</script>
{{ end }}
