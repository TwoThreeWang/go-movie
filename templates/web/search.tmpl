{{ template "base.tmpl" . }}

{{ define "content" }}
<div class="main-body" id="app">
    <div class="index-header">
        <form action="/search">
            <input type="text" placeholder="搜索你想看的，看电影本该简单..." name="kw" value="{{.kw}}">
        </form>
        <div class="search-history">
            <span>别人在搜:</span>
            <span>
                <a :href="`/search?kw=${item}`" v-for="item in history_search">[[item]]</a>
            </span>
        </div>
    </div>
    <div class="index-hot">
        <p class="title">{{.kw}} 搜索结果</p>
        <hr class="hr-edge-weak">
        <div class="conn-load" v-if="search_load" id="msg">正在聚合搜索多个影视资源站，请稍后...</div>
        <div class="index-hot-item">
            <div class="movie" v-for="item in movies">
                <img class="poster" :src="`${item.vod_pic}`" :alt="`${item.vod_name} Movie Poster`" referrerPolicy="no-referrer" onerror="this.onerror=null;this.src='../public/static/img/img_err.png';">
                <div class="movie-details">
                    <a class="movie-title" :href="`/detail?source=${item.source}&vid=${item.vod_id}`" :title="`查看《${item.vod_name}》影片详情`">[[item.vod_name]]</a>
                    <div class="cast-list">
                        <span>
                            [[item.vod_area]]｜[[item.type_name]]
                        </span>
                        <br>
                        <span>[[item.vod_director]](导)</span>
                        <br>
                        <span>[[item.source]]（[[item.vod_remarks]]）</span>
                        <br>
                        <span>[[item.vod_year]]</span>
                        <br>
                        <span><a :href="`/detail?source=${item.source}&vid=${item.vod_id}`" class="douban-link" target="_blank">播放 >>></a></span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    document.title = "{{.kw}} 搜索结果 - 膨胀电影";
    const { createApp } = Vue
    createApp({
        delimiters: ['[[', ']]'], // 将标记符号修改为 [[ 和 ]]
        data() {
            return {
                history_search : [],
                movies : [],
                search_load:true,
            }
        },
        mounted() {
            // 获取搜索历史
            axios.get(api_url+'/searchhistory')
                .then(response => {
                    this.history_search = response.data['data'];
                })
                .catch(error => {
                    console.log(error);
                });
            // 搜索接口
            axios.get(api_url+'/search?kw={{.kw}}')
                .then(response => {
                    console.log(response.data['data']);
                    this.movies = response.data['data'];
                    if(this.movies == null){
                        document.getElementById("msg").innerHTML="暂时没有搜索到影片资源，过段时间再试试呗！";
                    }else{
                        this.search_load = false;
                    }
                })
                .catch(error => {
                    console.log(error);
                });
        }
    }).mount('#app')
</script>
{{ end }}